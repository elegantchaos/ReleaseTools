#!/bin/sh

# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#  Created by Sam Deane on 25/03/2020.
#  All code (c) 2020 - present day, Elegant Chaos Limited.
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

# This script builds the rt command line tool and xcconfig files into local locations
# (`.build/tools.rt` and `.rt/` respectively), so that the rest of the scripts/targets
# can find them.
#
# It needs to be run once to bootstrap everything. After that, it should be run during
# each build.

# Instructions for use of this script:
# - copy this script into the client project
# - make a tools target in the client project
# - set this to be a dependency of the main target, so that it is built first
# - add a run script phase to the tools target which
#   - runs the local copy of this script
#   - runs the rt update-build command

# The local build phase can update the build number with the following lines:
# source "$PROJECT_DIR/Extras/Scripts/bootstrap-tools"
# "$RT" update-build --header "$BUILT_PRODUCTS_DIR/RTInfo.h" --repo "$SOURCE_ROOT"

# TODO: use `swift build --show-bin-path ...` to find the path to the built executable
#Â TODO: add a configuration setting, and switch to release by default?

REBUILD=false
if [[ "$1" == "--rebuild" ]]
then
    echo "Forced rebuild of release tools."
    REBUILD=true
fi

set -euo pipefail  # (add an x to flags to enable debugging)

LOCALTOOLS="$PWD/../ReleaseTools"
if [[ -e "$LOCALTOOLS" ]]
then
    RT="$LOCALTOOLS/.build/debug/rt"
else
    TOOLS="$PWD/.build/tools"
    RT="$TOOLS/rt"
fi


if $REBUILD || [ ! -f "$RT" ]
then
    if [[ -e "$LOCALTOOLS" ]]
    then
        echo "Updating local release tools."
        pushd "$LOCALTOOLS" > /dev/null
    else
        TOOLSRC="$PWD/.build/tools/src"
        RTSRC="$TOOLSRC/ReleaseTools"
        if [[ ! -e "$RTSRC" ]]
        then
            echo "Cloning release tools."
            mkdir -p "$TOOLSRC"
            cd "$TOOLSRC"
            git clone git@github.com:elegantchaos/ReleaseTools.git
        fi
        pushd "$RTSRC" > /dev/null
        echo "Updating release tools."
    fi

    swift run builder build ..
    popd > /dev/null
    "$RT" bootstrap
fi

RTV=`"$RT" --version`
echo "Using release tools $RTV."

